<?xml version="1.0"?>
<!--
Ruleset format documentation is available at:
https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
-->
<ruleset name="Hubside">
    <description>Extended PSR2 coding standard for Hubside project</description>

    <!--
    Ruleset shamelessly copied mainly from Symfony PHP CodeSniffer Coding Standard:
    https://github.com/djoos/Symfony-coding-standard/blob/master/Symfony/ruleset.xml
    -->

    <!-- Include the whole PSR-1 standard -->
    <rule ref="PSR1"/>
    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2"/>
    <!-- Include the whole PSR-12 standard -->
    <rule ref="PSR12">
        <!-- Symfony doesn't like spaces around concatenation operator -->
        <exclude name="PSR12.Operators.OperatorSpacing.NoSpaceBefore"/>
        <exclude name="PSR12.Operators.OperatorSpacing.NoSpaceAfter"/>
    </rule>

    <!--
    Symfony Coding Standards
    http://symfony.com/doc/current/contributing/code/standards.html
    -->
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.Indent"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing"/>

    <!-- Import Zend coding standard (which in turn imports PEAR) -->
    <rule ref="Zend">
        <!-- but exclude their code analyzer -->
        <exclude name="Zend.Debug.CodeAnalyzer"/>
        <!-- covered by Squiz ControlSignature, which enforces try/catch as well -->
        <exclude name="PEAR.ControlStructures.ControlSignature"/>
        <!-- covered by Squiz FunctionDeclarationSniff -->
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>
        <!-- Don't enforce Zend's private member underscores -->
        <exclude name="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
        <!-- Don't enforce Zend's camel caps format for variables -->
        <exclude name="Zend.NamingConventions.ValidVariableName.NotCamelCaps"/>
        <exclude name="Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps"/>
        <!-- Ignore variables that contains numbers -->
        <exclude name="Zend.NamingConventions.ValidVariableName.ContainsNumbers"/>
        <exclude name="Zend.NamingConventions.ValidVariableName.MemberVarContainsNumbers"/>
        <!-- In practice, Symfony2 spaces multiline function calls differently than Zend -->
    </rule>

    <!-- We provide our own subclass of PEAR's ClassComment and FunctionComment sniff, but these will do: -->
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
        <severity>0</severity>
    </rule>

    <!--
    Few extra rules from Customized Symfony3 coding standard:
    https://github.com/Endouble/Symfony3-custom-coding-standard/blob/master/Symfony3Custom/ruleset.xml
    -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
        </properties>
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>5</severity>
    </rule>
</ruleset>
