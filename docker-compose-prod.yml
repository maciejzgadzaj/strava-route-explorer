version: "3.5"

# https://docs.docker.com/compose/compose-file/11-extension/
x-logging-gcp: &logging-gcp
    # https://docs.docker.com/config/containers/logging/gcplogs/
    # https://docs.docker.com/compose/compose-file/05-services/#logging
    # https://github.com/GoogleCloudPlatform/community/blob/master/archived/docker-gcplogs-driver/index.md
    driver: gcplogs

x-logging-loki: &logging-loki
    # https://grafana.com/docs/loki/latest/send-data/docker-driver/
    # https://grafana.com/docs/loki/latest/send-data/docker-driver/configuration/
    # https://grafana.com/docs/loki/latest/reference/api/#push-log-entries-to-loki
    driver: loki
    # https://docs.docker.com/config/containers/logging/configure/
    options:
        loki-url: "https://739186:glc_eyJvIjoiOTg2NzE5IiwibiI6InN0YWNrLTc4NjE5MC1obC13cml0ZS1sb2NhbC1jaGFuZ2VibG9nIiwiayI6IjZIWThBNzJ3VTJCMDhsUDEwSGtjSno1ciIsIm0iOnsiciI6InByb2QtZXUtd2VzdC0yIn19@logs-prod-012.grafana.net/loki/api/v1/push"
        # https://grafana.com/docs/loki/latest/send-data/promtail/pipelines/
        # https://grafana.com/docs/loki/latest/send-data/promtail/stages/#prometheus-pipeline-stages
        loki-pipeline-stages: |
            - json:
                expressions:
                    level: level_name
            - labels:
                level:
            - static_labels:
                env: prod
        # https://docs.docker.com/config/containers/logging/json-file/
        max-file: "1"
        max-size: "10m"

services:
    nginx:
        image: nginx:1-alpine
        container_name: nginx
        hostname: nginx
        working_dir: /application
        volumes:
            - .:/application
            - ./.docker/nginx/default-prod.conf:/etc/nginx/conf.d/default.conf
            - ./.docker/nginx/cloudflare-origin-certificate:/etc/certs
            # Do not mount
            - /application/vendor
        env_file:
            - .env
        ports:
            - 80:80
            - 443:443
        networks:
            - strava-route-explorer
        depends_on:
          - php
          - mysql
        restart: always
        logging: *logging-loki

    php:
        image: mzgadzaj/gcp-php:latest
        container_name: php-fpm
        hostname: php-fpm
        working_dir: /application
        volumes:
            # docker-compose resolves $HOME and ~ to the guest home instead of host home, so they cannot be used here,
            # we need absolute path. See for example https://github.com/containerd/nerdctl/issues/996
            - /home/maciej_zgadzaj/.ssh:/root/.ssh
            - .:/application
            # Do not mount
            - /application/node_modules
        env_file:
            - .env
        tty: true
        networks:
            - strava-route-explorer
        depends_on:
            - mysql
        restart: always
        logging: *logging-loki

    mysql:
        image: mysql:8.2
        platform: linux/x86_64
        container_name: mysql
        hostname: mysql
        volumes:
            - ./.docker/mysql/data:/var/lib/mysql
            - ./.docker/mysql/dump:/dump
        ports:
            - 3306:3306
        restart: always
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            - strava-route-explorer
        logging: *logging-loki

networks:
    strava-route-explorer:
        name: strava-route-explorer
